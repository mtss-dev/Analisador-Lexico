Tokens        ||    Lexemas --> linha: 3
OP_COMMA 			 ,
OP_Semi 			 ;
OP_ABREPAR 			 (
OP_FECHAPAR 		 )
OP_ABRECOL 			 [
OP_FECHACOL 		 ]
OP_ABRECHV 			 {
OP_FECHACHV 		 }
OP_ATRIB 			 =
OP_SOMA 			 +
OP_SUB 				 -
OP_MULT 			 *
OP_DIV 				 /
OP_MOD 				 %
OP_MENOR 			 <
OP_MAIOR 			 >
OP_E 				 &
OP_OU 				 |

Tokens        ||    Lexemas --> linha: 5
KW_REAL 			 real
TK_ID 				 primeira_nota
OP_ATRIB 			 =
LIT_REAL 			 7.90000
OP_Semi 			 ;

Tokens        ||    Lexemas --> linha: 6
KW_REAL 			 real
TK_ID 				 segunda_nota
OP_ATRIB 			 =
LIT_REAL 			 8.00000
OP_Semi 			 ;

Tokens        ||    Lexemas --> linha: 7
KW_REAL 			 real
TK_ID 				 terceira_nota
OP_ATRIB 			 =
LIT_REAL 			 9.75000
OP_Semi 			 ;

Tokens        ||    Lexemas --> linha: 9
KW_CHAR 			 char
TK_ID 				 aluno
OP_ATRIB 			 =
LIT_STRING 			 Matheus
OP_Semi 			 ;

Tokens        ||    Lexemas --> linha: 11
KW_REAL 			 real
TK_ID 				 media
OP_ATRIB 			 =
OP_ABREPAR 			 (
TK_ID 				 primeira_nota
OP_SOMA 			 +
TK_ID 				 segunda_nota
OP_SOMA 			 +
TK_ID 				 terceira_nota
OP_FECHAPAR 		 )
OP_DIV 				 /
LIT_REAL 			 3.00000
OP_Semi 			 ;

Tokens        ||    Lexemas --> linha: 13
KW_CHAR 			 char
TK_ID 				 situacao
OP_Semi 			 ;

Tokens        ||    Lexemas --> linha: 15
KW_IF 				 if
OP_ABREPAR 			 (
TK_ID 				 media
OP_GE 				 >=
LIT_REAL 			 5.00000
OP_FECHAPAR 		 )
OP_ABRECHV 			 {

Tokens        ||    Lexemas --> linha: 16
TK_ID 				 situacao
OP_ATRIB 			 =
LIT_STRING 			 Aprovado
OP_Semi 			 ;

Tokens        ||    Lexemas --> linha: 17
OP_FECHACHV 		 }
KW_ELSE 			 else
OP_ABRECHV 			 {

Tokens        ||    Lexemas --> linha: 18
TK_ID 				 situacao
OP_ATRIB 			 =
LIT_STRING 			 Reprovado

Tokens        ||    Lexemas --> linha: 19
OP_FECHACHV 		 }

Tokens        ||    Lexemas --> linha: 21
KW_OUTPUT 			 output
OP_ABREPAR 			 (
TK_ID 				 situacao
OP_FECHAPAR 		 )

Tokens        ||    Lexemas --> linha: 23
KW_RETURN 			 return
LIT_INT 			 0
OP_Semi 			 ;
